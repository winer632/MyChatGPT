user www-data;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;
worker_rlimit_nofile 20000;

events {
	worker_connections 4096;
	multi_accept on;
}

http {

	##
	# Basic Settings
	##

	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
	keepalive_timeout 65;
	types_hash_max_size 2048;
	# server_tokens off;

	# server_names_hash_bucket_size 64;
	# server_name_in_redirect off;

	include /etc/nginx/mime.types;
	default_type application/octet-stream;


	map $http_origin $allow_origin {
        ~^https?://(bizoe.tech|chat.bizoe.tech|pay.bizoe.tech|service.bizoe.tech)$ $http_origin;
    }


	server {
        listen 80;
        server_name service.bizoe.tech www.service.bizoe.tech;

        location /.well-known/pki-validation/ {
            # path for static files
            root /home/azureuser/gpt/MyChatGPT/;
            # checks for static file, if not found proxy to app
            try_files $uri /dev/null =404;
        }
  	}

	# Server block for port 443
	server {
        listen 443 ssl;
        server_name service.bizoe.tech *.bizoe.tech ;

        # SSL certificates and keys
        ssl_certificate /home/azureuser/gpt/MyChatGPT/openssl/ssl-bundle.crt;
        ssl_certificate_key /home/azureuser/gpt/MyChatGPT/openssl/service.bizoe.tech.key;

        ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;

        ssl_dhparam /etc/ssl/certs/dhparam.pem;
        ssl_ecdh_curve auto;

        access_log /var/log/nginx/access.log combined;
        error_log /var/log/nginx/error.log info;


        location / {
            # Proxy requests to Gunicorn on port 8000
            proxy_pass http://127.0.0.1:8000;
            add_header Access-Control-Allow-Origin $allow_origin;
            add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
            add_header Access-Control-Allow-Headers Content-Type;
            add_header Access-Control-Max-Age 86400

            # Set proxy headers for Gunicorn
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
            proxy_redirect off;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Handling preflight requests
            if ($request_method = OPTIONS) {
                add_header Content-Type text/plain;
                add_header Content-Length 0;
                return 204;
            }
        }
	}


	##
	# Virtual Host Configs
	##

	include /etc/nginx/conf.d/*.conf;
	include /etc/nginx/sites-enabled/*;
}